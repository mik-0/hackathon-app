// Collection to store metadata of uploaded audio/video files
import mongoose from "mongoose";

const { Schema, model } = mongoose;

// ðŸŽ¯ TypeScript interface for type inference
export interface IMediaFile {
	_id: mongoose.Types.ObjectId | string; // Auto-generated by MongoDB
	filename: string;
	filePath: string;
	fileType: "audio" | "video";
	durationSec?: number;
	status: "in-progress" | "complete" | "error";
	language: string;
	createdAt: Date;
	updatedAt: Date;
}

const mediaFileSchema  = new Schema<IMediaFile>(
	{
		// Don't define _id - let MongoDB auto-generate it
		filename: { type: String, required: true },
		filePath: { type: String, required: true },
		fileType: { type: String, enum: ["audio", "video"], required: true },
		durationSec: { type: Number },
		status: { type: String, enum: ["in-progress", "complete", "error"], default: "in-progress" },
		language: { type: String, required: true, default: "en" },
	},
	{
		collection: "media_files",
		timestamps: true
	 }
);

const MediaFile = model<IMediaFile>("MediaFile", mediaFileSchema);

export { MediaFile };

